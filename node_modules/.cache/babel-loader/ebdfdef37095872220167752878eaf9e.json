{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\telegram-clone\\\\src\\\\Components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { load_message, setter_friend } from \"../redux/action/chat\";\nimport { LOAD_MESSAGES } from \"../redux/action/types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const userNameRef = useRef();\n  const passwordRef = useRef();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    getLogin(\"https://telegram-alisherjon-api.herokuapp.com/auth\");\n  };\n\n  async function getLogin(url) {\n    const body = JSON.stringify({\n      username: userNameRef.current.value,\n      password: passwordRef.current.value\n    });\n    const resp = await fetch(url, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"POST\",\n      body\n    }); // console.log(resp);\n\n    const respData = await resp.json();\n\n    if (respData.token) {\n      // console.log(respData);\n      localStorage.setItem(\"token\", respData.token);\n      const userInfo = await getUserInfo(respData.token); // console.log(userInfo);\n\n      localStorage.setItem(\"userId\", userInfo._id);\n      dispatch(setter_friend(userInfo.chats));\n      history.push(\"/Otish\");\n    }\n  }\n\n  async function getUserInfo(token) {\n    const resp = await fetch(\"https://telegram-alisherjon-api.herokuapp.com/users/\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${token}`\n      },\n      method: \"GET\"\n    });\n    const respData = await resp.json();\n    console.log(respData);\n    return respData.user;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"username\",\n            id: \"username\",\n            ref: userNameRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            ref: passwordRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btnn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"FcDldngpvrYoC1Fmu1rS7kFBRAw=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Ibrohim/Desktop/telegram-clone/src/Components/Login.js"],"names":["React","useRef","useDispatch","useHistory","load_message","setter_friend","LOAD_MESSAGES","Login","userNameRef","passwordRef","dispatch","history","handleSubmit","e","preventDefault","getLogin","url","body","JSON","stringify","username","current","value","password","resp","fetch","headers","method","respData","json","token","localStorage","setItem","userInfo","getUserInfo","_id","chats","push","authorization","console","log","user"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { load_message, setter_friend } from \"../redux/action/chat\";\r\nimport { LOAD_MESSAGES } from \"../redux/action/types\";\r\n\r\nconst Login = () => {\r\n  const userNameRef = useRef();\r\n  const passwordRef = useRef();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    getLogin(\"https://telegram-alisherjon-api.herokuapp.com/auth\");\r\n  };\r\n\r\n  async function getLogin(url) {\r\n    const body = JSON.stringify({\r\n      username: userNameRef.current.value,\r\n      password: passwordRef.current.value,\r\n    });\r\n\r\n    const resp = await fetch(url, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n      body,\r\n    });\r\n    // console.log(resp);\r\n    const respData = await resp.json();\r\n    if (respData.token) {\r\n      // console.log(respData);\r\n      localStorage.setItem(\"token\", respData.token);\r\n      const userInfo = await getUserInfo(respData.token);\r\n      // console.log(userInfo);\r\n      localStorage.setItem(\"userId\", userInfo._id);\r\n      dispatch(setter_friend(userInfo.chats));\r\n      history.push(\"/Otish\");\r\n    }\r\n  }\r\n\r\n  async function getUserInfo(token) {\r\n    const resp = await fetch(\r\n      \"https://telegram-alisherjon-api.herokuapp.com/users/\",\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n        method: \"GET\",\r\n      }\r\n    );\r\n\r\n    const respData = await resp.json();\r\n    console.log(respData);\r\n    return respData.user;\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form1\">\r\n          <h2 className=\"title\">Log in</h2>\r\n          <div className=\"form\">\r\n            <label htmlFor=\"username\">Username:</label>\r\n            <br />\r\n            <input type=\"username\" id=\"username\" ref={userNameRef} />\r\n            <br /> <br />\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <br />\r\n            <input type=\"password\" id=\"password\" ref={passwordRef} />\r\n          </div>\r\n          <div className=\"btnn\">\r\n            <button type=\"submit\">Submit</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}