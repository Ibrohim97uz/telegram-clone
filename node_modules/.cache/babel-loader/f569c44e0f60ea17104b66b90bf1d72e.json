{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\telegram-clone\\\\src\\\\Components\\\\ChatMembers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { chat_id_action } from \"../redux/action/chatIdAction\";\nimport { message_action } from \"../redux/action/messageAction\";\nimport { message_with_action } from \"../redux/action/messageWithAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chats = () => {\n  _s();\n\n  const token = localStorage.getItem(\"token\");\n  const store = useSelector(data => data);\n  const dispatch = useDispatch();\n\n  async function setFriendMessage(id, name) {\n    const resp = await fetch(`https://telegram-alisherjon-api.herokuapp.com/chats/${id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${token}`\n      },\n      method: \"GET\"\n    });\n    const respData = await resp.json();\n    console.log(respData);\n    const chatId = respData.chat._id;\n    console.log(chatId);\n    const arr = [];\n    respData.chat.messages.forEach(message => {\n      let obj = {\n        messageId: message._id,\n        messageFrom: message.from,\n        messageText: message.text,\n        messageData: message.date\n      };\n      arr.push(obj);\n    });\n    dispatch(message_action(arr));\n    dispatch(message_with_action(name));\n    dispatch(chat_id_action(chatId));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-members\",\n    children: store.userReducer.friends.map(friend => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setFriendMessage(friend.chatId, friend.friendName),\n        className: \"user-friend-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: friend.friendName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: friend.friendPhone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, friend.chatId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chats, \"TJyi8xTV/cllwIsFm0O4nJ8aGD4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Chats;\nexport default Chats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"sources":["C:/Users/Ibrohim/Desktop/telegram-clone/src/Components/ChatMembers.js"],"names":["React","useEffect","useDispatch","useSelector","chat_id_action","message_action","message_with_action","Chats","token","localStorage","getItem","store","data","dispatch","setFriendMessage","id","name","resp","fetch","headers","authorization","method","respData","json","console","log","chatId","chat","_id","arr","messages","forEach","message","obj","messageId","messageFrom","from","messageText","text","messageData","date","push","userReducer","friends","map","friend","friendName","friendPhone"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,mBAAT,QAAoC,mCAApC;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAMC,KAAK,GAAGR,WAAW,CAAES,IAAD,IAAUA,IAAX,CAAzB;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,iBAAeY,gBAAf,CAAgCC,EAAhC,EAAoCC,IAApC,EAA0C;AACxC,UAAMC,IAAI,GAAG,MAAMC,KAAK,CACrB,uDAAsDH,EAAG,EADpC,EAEtB;AACEI,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASZ,KAAM;AAFxB,OADX;AAKEa,MAAAA,MAAM,EAAE;AALV,KAFsB,CAAxB;AAWA,UAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,IAAL,EAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,UAAMI,MAAM,GAAGJ,QAAQ,CAACK,IAAT,CAAcC,GAA7B;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACA,UAAMG,GAAG,GAAG,EAAZ;AACAP,IAAAA,QAAQ,CAACK,IAAT,CAAcG,QAAd,CAAuBC,OAAvB,CAAgCC,OAAD,IAAa;AAC1C,UAAIC,GAAG,GAAG;AACRC,QAAAA,SAAS,EAAEF,OAAO,CAACJ,GADX;AAERO,QAAAA,WAAW,EAAEH,OAAO,CAACI,IAFb;AAGRC,QAAAA,WAAW,EAAEL,OAAO,CAACM,IAHb;AAIRC,QAAAA,WAAW,EAAEP,OAAO,CAACQ;AAJb,OAAV;AAMAX,MAAAA,GAAG,CAACY,IAAJ,CAASR,GAAT;AACD,KARD;AASApB,IAAAA,QAAQ,CAACR,cAAc,CAACwB,GAAD,CAAf,CAAR;AACAhB,IAAAA,QAAQ,CAACP,mBAAmB,CAACU,IAAD,CAApB,CAAR;AACAH,IAAAA,QAAQ,CAACT,cAAc,CAACsB,MAAD,CAAf,CAAR;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,cACGf,KAAK,CAAC+B,WAAN,CAAkBC,OAAlB,CAA0BC,GAA1B,CAA+BC,MAAD,IAAY;AACzC,0BACE;AACE,QAAA,OAAO,EAAE,MAAM/B,gBAAgB,CAAC+B,MAAM,CAACnB,MAAR,EAAgBmB,MAAM,CAACC,UAAvB,CADjC;AAGE,QAAA,SAAS,EAAC,kBAHZ;AAAA,gCAKE;AAAA,oBAAKD,MAAM,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA,oBAAID,MAAM,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA,SAEOF,MAAM,CAACnB,MAFd;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAXA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAnDD;;GAAMnB,K;UAEUJ,W,EACGD,W;;;KAHbK,K;AAqDN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { chat_id_action } from \"../redux/action/chatIdAction\";\r\nimport { message_action } from \"../redux/action/messageAction\";\r\nimport { message_with_action } from \"../redux/action/messageWithAction\";\r\n\r\nconst Chats = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const store = useSelector((data) => data);\r\n  const dispatch = useDispatch();\r\n\r\n  async function setFriendMessage(id, name) {\r\n    const resp = await fetch(\r\n      `https://telegram-alisherjon-api.herokuapp.com/chats/${id}`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n        method: \"GET\",\r\n      }\r\n    );\r\n\r\n    const respData = await resp.json();\r\n    console.log(respData);\r\n    const chatId = respData.chat._id;\r\n    console.log(chatId);\r\n    const arr = [];\r\n    respData.chat.messages.forEach((message) => {\r\n      let obj = {\r\n        messageId: message._id,\r\n        messageFrom: message.from,\r\n        messageText: message.text,\r\n        messageData: message.date,\r\n      };\r\n      arr.push(obj);\r\n    });\r\n    dispatch(message_action(arr));\r\n    dispatch(message_with_action(name));\r\n    dispatch(chat_id_action(chatId));\r\n  }\r\n  return (\r\n    <div className=\"chat-members\">\r\n      {store.userReducer.friends.map((friend) => {\r\n        return (\r\n          <div\r\n            onClick={() => setFriendMessage(friend.chatId, friend.friendName)}\r\n            key={friend.chatId}\r\n            className=\"user-friend-item\"\r\n          >\r\n            <h3>{friend.friendName}</h3>\r\n            <p>{friend.friendPhone}</p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chats;\r\n"]},"metadata":{},"sourceType":"module"}