{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\telegram-clone\\\\src\\\\Components\\\\Online.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { new_message_action } from \"../redux/action/newMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Online = () => {\n  _s();\n\n  const store = useSelector(data => data);\n  const ref = useRef(\"\");\n  const myId = store.userReducer.userId;\n  const token = localStorage.getItem(\"token\");\n  const chatId = store.messageReducer.chatId;\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (ref.current.value === \"\") {\n      return;\n    }\n\n    setMessage();\n    const obj = {\n      messageText: ref.current.value,\n      messageFrom: myId,\n      messageData: new Date()\n    };\n    dispatch(new_message_action(obj));\n    ref.current.value = \"\";\n  };\n\n  async function setMessage() {\n    const body = JSON.stringify({\n      chatId,\n      text: ref.current.value\n    });\n    const resp = await fetch(\"https://telegram-alisherjon-api.herokuapp.com/messages\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${token}`\n      },\n      method: \"POST\",\n      body\n    });\n    const respData = await resp.json();\n  }\n\n  if (store.messageReducer.messageWith === \"\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-online flex\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No messages yet...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-online right-online-relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: store.messageReducer.messageWith\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"online\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: store.messageReducer.messages.map(message => {\n            if (message.messageFrom === myId) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-from-me\",\n                children: message.messageText\n              }, message.messageId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-to-me\",\n                children: message.messageText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"input-message\",\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: ref,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-paper-plane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Online, \"JUaCASGIOnxTn87Iw8THtjAjifI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Online;\nexport default Online;\n\nvar _c;\n\n$RefreshReg$(_c, \"Online\");","map":{"version":3,"sources":["C:/Users/Ibrohim/Desktop/telegram-clone/src/Components/Online.js"],"names":["React","useRef","useDispatch","useSelector","new_message_action","Online","store","data","ref","myId","userReducer","userId","token","localStorage","getItem","chatId","messageReducer","dispatch","handleSubmit","e","preventDefault","current","value","setMessage","obj","messageText","messageFrom","messageData","Date","body","JSON","stringify","text","resp","fetch","headers","authorization","method","respData","json","messageWith","messages","map","message","messageId"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { new_message_action } from \"../redux/action/newMessage\";\r\n\r\nconst Online = () => {\r\n  const store = useSelector((data) => data);\r\n  const ref = useRef(\"\");\r\n  const myId = store.userReducer.userId;\r\n  const token = localStorage.getItem(\"token\");\r\n  const chatId = store.messageReducer.chatId;\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (ref.current.value === \"\") {\r\n      return;\r\n    }\r\n    setMessage();\r\n    const obj = {\r\n      messageText: ref.current.value,\r\n      messageFrom: myId,\r\n      messageData: new Date(),\r\n    };\r\n    dispatch(new_message_action(obj));\r\n    ref.current.value = \"\";\r\n  };\r\n\r\n  async function setMessage() {\r\n    const body = JSON.stringify({\r\n      chatId,\r\n      text: ref.current.value,\r\n    });\r\n    const resp = await fetch(\r\n      \"https://telegram-alisherjon-api.herokuapp.com/messages\",\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n        method: \"POST\",\r\n        body,\r\n      }\r\n    );\r\n\r\n    const respData = await resp.json();\r\n  }\r\n\r\n  if (store.messageReducer.messageWith === \"\") {\r\n    return (\r\n      <div className=\"right-online flex\">\r\n        <p>No messages yet...</p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"right-online right-online-relative\">\r\n        <div className=\"name\">\r\n          <h3>{store.messageReducer.messageWith}</h3>\r\n          <p>online</p>\r\n        </div>\r\n\r\n        <div className=\"message-wrapper\">\r\n          <div className=\"messages\">\r\n            {store.messageReducer.messages.map((message) => {\r\n              if (message.messageFrom === myId) {\r\n                return (\r\n                  <div key={message.messageId} className=\"message-from-me\">\r\n                    {message.messageText}\r\n                  </div>\r\n                );\r\n              } else {\r\n                return (\r\n                  <div className=\"message-to-me\">{message.messageText}</div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n        <form className=\"input-message\" onSubmit={(e) => handleSubmit(e)}>\r\n          <input ref={ref} type=\"text\" />\r\n          <button type=\"submit\">\r\n            <i className=\"fas fa-paper-plane\"></i>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Online;\r\n"]},"metadata":{},"sourceType":"module"}