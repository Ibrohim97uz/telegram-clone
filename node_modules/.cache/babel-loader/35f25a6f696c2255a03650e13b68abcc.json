{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\telegram-clone\\\\src\\\\Components\\\\SearchResult.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchResult = () => {\n  _s();\n\n  const [isActive, setIsactive] = useState(false);\n  const data = useSelector(data => data);\n  const dispatch = useDispatch();\n  const token = localStorage.getItem(\"token\");\n\n  async function handleClick() {\n    if (data.chat.friend.length === 0) {\n      const id = data.search.id;\n      const chatId = await setFriend(id);\n      const obj = {\n        name: data.search.name,\n        id: chatId,\n        phone: data.search.phone\n      };\n      dispatch(temp_Chat_Id(chatId));\n      dispatch(add_friend(obj));\n      dispatch(deactivate_search_result(DEACTIVATE_SEARCH_RESULT));\n    } else if (data.chat.friend.find(friend => friend.name === data.search.name)) {\n      dispatch(deactivate_search_result(DEACTIVATE_SEARCH_RESULT));\n      return;\n    } else {\n      const id = data.search.id;\n      setFriend(id);\n      const obj = {\n        name: data.search.name,\n        id: data.search.id,\n        phone: data.search.phone\n      };\n      dispatch(add_friend(obj));\n      dispatch(deactivate_search_result(DEACTIVATE_SEARCH_RESULT));\n    }\n  }\n\n  async function setFriend(id) {\n    const body = JSON.stringify({\n      friendId: id\n    });\n    const resp = await fetch(\"https://telegram-alisherjon-api.herokuapp.com/chats/\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${token}`\n      },\n      method: \"POST\",\n      body\n    });\n    console.log(resp);\n    const respData = await resp.json();\n    console.log(respData);\n    return respData.chat._id;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => handleClick(),\n    className: isActive ? \"search-result-active\" : \"search-result-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: data.search.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: data.search.phone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchResult, \"/Fz9OFsaKUfqvTcS/Fzx4AIpdIg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = SearchResult;\nexport default SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["C:/Users/Ibrohim/Desktop/telegram-clone/src/Components/SearchResult.js"],"names":["React","useEffect","useState","useDispatch","useSelector","SearchResult","isActive","setIsactive","data","dispatch","token","localStorage","getItem","handleClick","chat","friend","length","id","search","chatId","setFriend","obj","name","phone","temp_Chat_Id","add_friend","deactivate_search_result","DEACTIVATE_SEARCH_RESULT","find","body","JSON","stringify","friendId","resp","fetch","headers","authorization","method","console","log","respData","json","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SearchResult = () => {\r\n  const [isActive, setIsactive] = useState(false);\r\n  const data = useSelector((data) => data);\r\n  const dispatch = useDispatch();\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  async function handleClick() {\r\n    if (data.chat.friend.length === 0) {\r\n      const id = data.search.id;\r\n      const chatId = await setFriend(id);\r\n      const obj = {\r\n        name: data.search.name,\r\n        id: chatId,\r\n        phone: data.search.phone,\r\n      };\r\n      dispatch(temp_Chat_Id(chatId));\r\n      dispatch(add_friend(obj));\r\n      dispatch(deactivate_search_result(DEACTIVATE_SEARCH_RESULT));\r\n    } else if (\r\n      data.chat.friend.find((friend) => friend.name === data.search.name)\r\n    ) {\r\n      dispatch(deactivate_search_result(DEACTIVATE_SEARCH_RESULT));\r\n      return;\r\n    } else {\r\n      const id = data.search.id;\r\n      setFriend(id);\r\n      const obj = {\r\n        name: data.search.name,\r\n        id: data.search.id,\r\n        phone: data.search.phone,\r\n      };\r\n      dispatch(add_friend(obj));\r\n      dispatch(deactivate_search_result(DEACTIVATE_SEARCH_RESULT));\r\n    }\r\n  }\r\n\r\n  async function setFriend(id) {\r\n    const body = JSON.stringify({\r\n      friendId: id,\r\n    });\r\n\r\n    const resp = await fetch(\r\n      \"https://telegram-alisherjon-api.herokuapp.com/chats/\",\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n        method: \"POST\",\r\n        body,\r\n      }\r\n    );\r\n    console.log(resp);\r\n    const respData = await resp.json();\r\n    console.log(respData);\r\n    return respData.chat._id;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onClick={() => handleClick()}\r\n      className={isActive ? \"search-result-active\" : \"search-result-hidden\"}\r\n    >\r\n      <h3>{data.search.name}</h3>\r\n      <h3>{data.search.phone}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResult;\r\n"]},"metadata":{},"sourceType":"module"}