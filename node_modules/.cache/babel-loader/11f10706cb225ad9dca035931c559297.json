{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\telegram-clone\\\\src\\\\Components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { user_action } from \"../redux/action/userAction\";\nimport Alert from \"./utils/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const passwordRef = useRef();\n  const [userName, setUserName] = useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (nameRef.current.value === \"\" || passwordRef.current.value === \"\" || telNumberRef === \"\" || userName === \"\") {\n      return console.log(\"please fill all the fields\");\n    } else if (userCheck !== true) {\n      return console.log(\"please check your username\");\n    }\n\n    getRegister(\"https://telegram-alisherjon-api.herokuapp.com/users\");\n  };\n\n  const handleChangeUserName = value => {\n    setUserName(value);\n  };\n\n  async function getRegister(url) {\n    const body = JSON.stringify({\n      name: nameRef.current.value,\n      username: userName,\n      password: passwordRef.current.value,\n      phone: telNumberRef.current.value\n    });\n    const resp = await fetch(url, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"POST\",\n      body\n    });\n\n    if (!resp.ok) {\n      return console.log(\"Your phone is already registered!\");\n    }\n\n    const respData = await resp.json();\n    localStorage.setItem(\"token\", respData.token);\n    console.log(respData);\n    const user = {\n      name: respData.user.name,\n      token: respData.token,\n      phone: respData.user.phone,\n      friends: [],\n      username: respData.user.username\n    };\n    dispatch(user_action(user));\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    history.push(\"/chat\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"check-username\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => handleChangeUserName(e.target.value),\n            type: \"username\",\n            id: \"username\",\n            value: userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"w-100\",\n          type: \"password\",\n          id: \"password\",\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-button w-100\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"w-100 \",\n          type: \"submit\",\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"43NNee79c/fCyaOOjZ4Mu3C4r5k=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Ibrohim/Desktop/telegram-clone/src/Components/Login.js"],"names":["React","useState","useRef","useDispatch","useSelector","useHistory","Link","user_action","Alert","Register","passwordRef","userName","setUserName","dispatch","history","handleSubmit","e","preventDefault","nameRef","current","value","telNumberRef","console","log","userCheck","getRegister","handleChangeUserName","url","body","JSON","stringify","name","username","password","phone","resp","fetch","headers","method","ok","respData","json","localStorage","setItem","token","user","friends","push","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { user_action } from \"../redux/action/userAction\";\r\nimport Alert from \"./utils/Alert\";\r\n\r\nconst Register = () => {\r\n  const passwordRef = useRef();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      nameRef.current.value === \"\" ||\r\n      passwordRef.current.value === \"\" ||\r\n      telNumberRef === \"\" ||\r\n      userName === \"\"\r\n    ) {\r\n      return console.log(\"please fill all the fields\");\r\n    } else if (userCheck !== true) {\r\n      return console.log(\"please check your username\");\r\n    }\r\n    getRegister(\"https://telegram-alisherjon-api.herokuapp.com/users\");\r\n  };\r\n\r\n  const handleChangeUserName = (value) => {\r\n    setUserName(value);\r\n  };\r\n\r\n  async function getRegister(url) {\r\n    const body = JSON.stringify({\r\n      name: nameRef.current.value,\r\n      username: userName,\r\n      password: passwordRef.current.value,\r\n      phone: telNumberRef.current.value,\r\n    });\r\n\r\n    const resp = await fetch(url, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n      body,\r\n    });\r\n\r\n    if (!resp.ok) {\r\n      return console.log(\"Your phone is already registered!\");\r\n    }\r\n    const respData = await resp.json();\r\n    localStorage.setItem(\"token\", respData.token);\r\n    console.log(respData);\r\n    const user = {\r\n      name: respData.user.name,\r\n      token: respData.token,\r\n      phone: respData.user.phone,\r\n      friends: [],\r\n      username: respData.user.username,\r\n    };\r\n    dispatch(user_action(user));\r\n    localStorage.setItem(\"user\", JSON.stringify(user));\r\n    history.push(\"/chat\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"register-page\">\r\n      <form className=\"register-form\" onSubmit={handleSubmit}>\r\n        <h2 className=\"title\">Login</h2>\r\n        <div className=\"form\">\r\n          <div className=\"check-username\">\r\n            <label htmlFor=\"username\">Username:</label>\r\n            <br />\r\n            <input\r\n              onChange={(e) => handleChangeUserName(e.target.value)}\r\n              type=\"username\"\r\n              id=\"username\"\r\n              value={userName}\r\n            />\r\n            <br /> <br />\r\n          </div>\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <br />\r\n          <input\r\n            className=\"w-100\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            ref={passwordRef}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"register-button w-100\">\r\n          <button className=\"w-100 \" type=\"submit\">\r\n            Log in\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}