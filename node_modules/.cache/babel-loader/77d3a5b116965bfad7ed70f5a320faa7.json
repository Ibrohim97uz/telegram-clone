{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\telegram-clone\\\\src\\\\Components\\\\SearchResult.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { search_reducer } from \"../redux/action/searchAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchResult = () => {\n  _s();\n\n  const token = localStorage.getItem(\"token\");\n  const store = useSelector(data => data);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    setMessage(store.searchReducer.searchFriendId);\n  };\n\n  async function setMessage(id) {\n    const body = JSON.stringify({\n      friendId: id\n    });\n    const resp = await fetch(\"https://telegram-alisherjon-api.herokuapp.com/chats/\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${token}`\n      },\n      method: \"POST\",\n      body\n    });\n    const respData = await resp.json();\n    console.log(respData);\n\n    if (respData.status === 201) {\n      return console.log(\"Chat is already exists!\");\n    }\n\n    respData;\n    const newFriendObj = {\n      chatId: respData.chat._id,\n      friendName: \"Fayzulloh\",\n      friendPhone: \"999015507\",\n      friendUserName: \"Killer\"\n    };\n    const obj = {\n      searchFriendId: \"\",\n      searchName: \"\",\n      phone: \"\",\n      isHidden: true\n    };\n    dispatch(search_reducer(obj));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => handleClick(),\n    className: store.searchReducer.isHidden ? \"search-result hidden\" : \"search-result \",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: store.searchReducer.searchName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: store.searchReducer.phone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchResult, \"TJyi8xTV/cllwIsFm0O4nJ8aGD4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = SearchResult;\nexport default SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["C:/Users/Ibrohim/Desktop/telegram-clone/src/Components/SearchResult.js"],"names":["React","useEffect","useState","useDispatch","useSelector","search_reducer","SearchResult","token","localStorage","getItem","store","data","dispatch","handleClick","setMessage","searchReducer","searchFriendId","id","body","JSON","stringify","friendId","resp","fetch","headers","authorization","method","respData","json","console","log","status","newFriendObj","chatId","chat","_id","friendName","friendPhone","friendUserName","obj","searchName","phone","isHidden"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,8BAA/B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAMC,KAAK,GAAGN,WAAW,CAAEO,IAAD,IAAUA,IAAX,CAAzB;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,QAAMU,WAAW,GAAG,MAAM;AACxBC,IAAAA,UAAU,CAACJ,KAAK,CAACK,aAAN,CAAoBC,cAArB,CAAV;AACD,GAFD;;AAIA,iBAAeF,UAAf,CAA0BG,EAA1B,EAA8B;AAC5B,UAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC1BC,MAAAA,QAAQ,EAAEJ;AADgB,KAAf,CAAb;AAIA,UAAMK,IAAI,GAAG,MAAMC,KAAK,CACtB,sDADsB,EAEtB;AACEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASlB,KAAM;AAFxB,OADX;AAKEmB,MAAAA,MAAM,EAAE,MALV;AAMER,MAAAA;AANF,KAFsB,CAAxB;AAYA,UAAMS,QAAQ,GAAG,MAAML,IAAI,CAACM,IAAL,EAAvB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AAEA,QAAIA,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,aAAOF,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAP;AACD;;AAEDH,IAAAA,QAAQ;AAER,UAAMK,YAAY,GAAG;AACnBC,MAAAA,MAAM,EAAEN,QAAQ,CAACO,IAAT,CAAcC,GADH;AAEnBC,MAAAA,UAAU,EAAE,WAFO;AAGnBC,MAAAA,WAAW,EAAE,WAHM;AAInBC,MAAAA,cAAc,EAAE;AAJG,KAArB;AAOA,UAAMC,GAAG,GAAG;AACVvB,MAAAA,cAAc,EAAE,EADN;AAEVwB,MAAAA,UAAU,EAAE,EAFF;AAGVC,MAAAA,KAAK,EAAE,EAHG;AAIVC,MAAAA,QAAQ,EAAE;AAJA,KAAZ;AAMA9B,IAAAA,QAAQ,CAACP,cAAc,CAACkC,GAAD,CAAf,CAAR;AACD;;AAED,sBACE;AACE,IAAA,OAAO,EAAE,MAAM1B,WAAW,EAD5B;AAEE,IAAA,SAAS,EACPH,KAAK,CAACK,aAAN,CAAoB2B,QAApB,GAA+B,sBAA/B,GAAwD,gBAH5D;AAAA,4BAME;AAAA,gBAAKhC,KAAK,CAACK,aAAN,CAAoByB;AAAzB;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,gBAAK9B,KAAK,CAACK,aAAN,CAAoB0B;AAAzB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA/DD;;GAAMnC,Y;UAEUF,W,EACGD,W;;;KAHbG,Y;AAiEN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { search_reducer } from \"../redux/action/searchAction\";\r\n\r\nconst SearchResult = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const store = useSelector((data) => data);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = () => {\r\n    setMessage(store.searchReducer.searchFriendId);\r\n  };\r\n\r\n  async function setMessage(id) {\r\n    const body = JSON.stringify({\r\n      friendId: id,\r\n    });\r\n\r\n    const resp = await fetch(\r\n      \"https://telegram-alisherjon-api.herokuapp.com/chats/\",\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n        method: \"POST\",\r\n        body,\r\n      }\r\n    );\r\n\r\n    const respData = await resp.json();\r\n\r\n    console.log(respData);\r\n\r\n    if (respData.status === 201) {\r\n      return console.log(\"Chat is already exists!\");\r\n    }\r\n\r\n    respData;\r\n\r\n    const newFriendObj = {\r\n      chatId: respData.chat._id,\r\n      friendName: \"Fayzulloh\",\r\n      friendPhone: \"999015507\",\r\n      friendUserName: \"Killer\",\r\n    };\r\n\r\n    const obj = {\r\n      searchFriendId: \"\",\r\n      searchName: \"\",\r\n      phone: \"\",\r\n      isHidden: true,\r\n    };\r\n    dispatch(search_reducer(obj));\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onClick={() => handleClick()}\r\n      className={\r\n        store.searchReducer.isHidden ? \"search-result hidden\" : \"search-result \"\r\n      }\r\n    >\r\n      <h3>{store.searchReducer.searchName}</h3>\r\n      <h3>{store.searchReducer.phone}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResult;\r\n"]},"metadata":{},"sourceType":"module"}