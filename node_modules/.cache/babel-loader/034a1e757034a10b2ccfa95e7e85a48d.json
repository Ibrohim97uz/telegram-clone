{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\telegram-clone\\\\src\\\\Components\\\\Message.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { NewMessage, setter_friend } from \"../redux/action/chat\";\nimport SetterFriend from \"./SetterFriend\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Message = () => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const chatId = store.chat.tempChatId;\n  const myId = localStorage.getItem(\"userId\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (text === \"\") return;\n    const newMessage = {\n      chatId,\n      text\n    };\n  };\n\n  async function setMessage(obj) {\n    const body = JSON.stringify({\n      chatId: obj.chatId,\n      text: obj.text\n    });\n    console.log(body);\n    const resp = await fetch(\"https://telegram-alisherjon-api.herokuapp.com/messages\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${token}`\n      },\n      method: \"POST\",\n      body\n    });\n    const respData = await resp.json();\n  }\n\n  const messages = store.chat.messages;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat\",\n      className: \"right-side-chat-main\",\n      children: messages.map((message, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.from === myId ? \"from\" : \"to\"}-you`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-2x fa-paperclip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"New message...\",\n            value: text,\n            onChange: e => setText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fab fa-2x fa-telegram-plane\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-2x fa-smile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-2x fa-microphone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SetterFriend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Message, \"3t0DFnMi16eB/7p7iIKtjG5r68g=\");\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["C:/Users/Ibrohim/Desktop/telegram-clone/src/Components/Message.js"],"names":["React","useState","useDispatch","useSelector","NewMessage","setter_friend","SetterFriend","Message","text","setText","chatId","store","chat","tempChatId","myId","localStorage","getItem","handleSubmit","e","preventDefault","newMessage","setMessage","obj","body","JSON","stringify","console","log","resp","fetch","headers","authorization","token","method","respData","json","messages","map","message","index","from","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NewMessage, setter_friend } from \"../redux/action/chat\";\r\nimport SetterFriend from \"./SetterFriend\";\r\n\r\nconst Message = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const chatId = store.chat.tempChatId;\r\n  const myId = localStorage.getItem(\"userId\");\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (text === \"\") return;\r\n\r\n    const newMessage = {\r\n      chatId,\r\n      text,\r\n    };\r\n  };\r\n\r\n  async function setMessage(obj) {\r\n    const body = JSON.stringify({\r\n      chatId: obj.chatId,\r\n      text: obj.text,\r\n    });\r\n    console.log(body);\r\n    const resp = await fetch(\r\n      \"https://telegram-alisherjon-api.herokuapp.com/messages\",\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n        method: \"POST\",\r\n        body,\r\n      }\r\n    );\r\n\r\n    const respData = await resp.json();\r\n  }\r\n\r\n  const messages = store.chat.messages;\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"chat\" className=\"right-side-chat-main\">\r\n        {messages.map((message, index) => {\r\n          return (\r\n            <div\r\n              key={index}\r\n              className={`message ${message.from === myId ? \"from\" : \"to\"}-you`}\r\n            >\r\n              {message.text}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"right-bottom\">\r\n          <div className=\"bottom-left\">\r\n            <i className=\"fas fa-2x fa-paperclip\"></i>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"New message...\"\r\n              value={text}\r\n              onChange={(e) => setText(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"bottom-right\">\r\n            <button>\r\n              <i className=\"fab fa-2x fa-telegram-plane\"></i>\r\n            </button>\r\n            <i className=\"far fa-2x fa-smile\"></i>\r\n            <i className=\"fas fa-2x fa-microphone\"></i>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <SetterFriend />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n"]},"metadata":{},"sourceType":"module"}