{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\telegram-clone\\\\src\\\\Components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { user_action } from \"../redux/action/userAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const passwordRef = useRef();\n  const [userName, setUserName] = useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (passwordRef.current.value === \"\" || userName === \"\") {\n      return console.log(\"please fill all the fields\");\n    }\n\n    getRegister(\"https://telegram-alisherjon-api.herokuapp.com/auth\");\n  };\n\n  const handleChangeUserName = value => {\n    setUserName(value);\n  };\n\n  async function getRegister(url) {\n    const body = JSON.stringify({\n      username: userName,\n      password: passwordRef.current.value\n    });\n    const resp = await fetch(url, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"POST\",\n      body\n    });\n    console.log(resp);\n    const respData = await resp.json();\n    console.log(respData.token);\n\n    if (!resp.ok) {\n      return console.log(\"User not found!\");\n    } // localStorage.setItem(\"token\", respData.token);\n    // console.log(respData);\n    // const user = {\n    //   name: respData.user.name,\n    //   token: respData.token,\n    //   phone: respData.user.phone,\n    //   friends: [],\n    //   username: respData.user.username,\n    // };\n    // dispatch(user_action(user));\n    // localStorage.setItem(\"user\", JSON.stringify(user));\n    // history.push(\"/chat\");\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"check-username\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => handleChangeUserName(e.target.value),\n            type: \"username\",\n            id: \"username\",\n            value: userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"w-100\",\n          type: \"password\",\n          id: \"password\",\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-button w-100\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"w-100 \",\n          type: \"submit\",\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"43NNee79c/fCyaOOjZ4Mu3C4r5k=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Ibrohim/Desktop/telegram-clone/src/Components/Login.js"],"names":["React","useState","useRef","useDispatch","useHistory","user_action","Register","passwordRef","userName","setUserName","dispatch","history","handleSubmit","e","preventDefault","current","value","console","log","getRegister","handleChangeUserName","url","body","JSON","stringify","username","password","resp","fetch","headers","method","respData","json","token","ok","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { user_action } from \"../redux/action/userAction\";\r\n\r\nconst Register = () => {\r\n  const passwordRef = useRef();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (passwordRef.current.value === \"\" || userName === \"\") {\r\n      return console.log(\"please fill all the fields\");\r\n    }\r\n\r\n    getRegister(\"https://telegram-alisherjon-api.herokuapp.com/auth\");\r\n  };\r\n\r\n  const handleChangeUserName = (value) => {\r\n    setUserName(value);\r\n  };\r\n\r\n  async function getRegister(url) {\r\n    const body = JSON.stringify({\r\n      username: userName,\r\n      password: passwordRef.current.value,\r\n    });\r\n\r\n    const resp = await fetch(url, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n      body,\r\n    });\r\n    console.log(resp);\r\n    const respData = await resp.json();\r\n    console.log(respData.token);\r\n\r\n    if (!resp.ok) {\r\n      return console.log(\"User not found!\");\r\n    }\r\n    // localStorage.setItem(\"token\", respData.token);\r\n    // console.log(respData);\r\n    // const user = {\r\n    //   name: respData.user.name,\r\n    //   token: respData.token,\r\n    //   phone: respData.user.phone,\r\n    //   friends: [],\r\n    //   username: respData.user.username,\r\n    // };\r\n    // dispatch(user_action(user));\r\n    // localStorage.setItem(\"user\", JSON.stringify(user));\r\n    // history.push(\"/chat\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"register-page\">\r\n      <form className=\"register-form\" onSubmit={handleSubmit}>\r\n        <h2 className=\"title\">Login</h2>\r\n        <div className=\"form\">\r\n          <div className=\"check-username\">\r\n            <label htmlFor=\"username\">Username:</label>\r\n            <br />\r\n            <input\r\n              onChange={(e) => handleChangeUserName(e.target.value)}\r\n              type=\"username\"\r\n              id=\"username\"\r\n              value={userName}\r\n            />\r\n            <br /> <br />\r\n          </div>\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <br />\r\n          <input\r\n            className=\"w-100\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            ref={passwordRef}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"register-button w-100\">\r\n          <button className=\"w-100 \" type=\"submit\">\r\n            Log in\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}