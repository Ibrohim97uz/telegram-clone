{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\telegram-clone\\\\src\\\\Components\\\\ChatMembers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { message_reducer } from \"../redux/reducer/messageReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chats = () => {\n  _s();\n\n  const token = localStorage.getItem(\"token\");\n  const store = useSelector(data => data);\n  const dispatch = useDispatch();\n\n  async function setFriendMessage(id) {\n    const resp = await fetch(`https://telegram-alisherjon-api.herokuapp.com/chats/${id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${token}`\n      },\n      method: \"GET\"\n    });\n    const respData = await resp.json();\n    console.log(respData.chat.messages);\n    const arr = [];\n    respData.chat.messages.forEach(message => {\n      let obj = {\n        messageId: message._id,\n        messageFrom: message.date,\n        messageText: message.text,\n        messageData: message.from\n      };\n      arr.push(obj);\n    });\n    message_reducer();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-members\",\n    children: store.userReducer.friends.map(friend => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setFriendMessage(friend.chatId),\n        className: \"user-friend-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: friend.friendName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: friend.friendPhone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, friend.chatId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chats, \"TJyi8xTV/cllwIsFm0O4nJ8aGD4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Chats;\nexport default Chats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"sources":["C:/Users/Ibrohim/Desktop/telegram-clone/src/Components/ChatMembers.js"],"names":["React","useEffect","useDispatch","useSelector","message_reducer","Chats","token","localStorage","getItem","store","data","dispatch","setFriendMessage","id","resp","fetch","headers","authorization","method","respData","json","console","log","chat","messages","arr","forEach","message","obj","messageId","_id","messageFrom","date","messageText","text","messageData","from","push","userReducer","friends","map","friend","chatId","friendName","friendPhone"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,iCAAhC;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAMC,KAAK,GAAGN,WAAW,CAAEO,IAAD,IAAUA,IAAX,CAAzB;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,iBAAeU,gBAAf,CAAgCC,EAAhC,EAAoC;AAClC,UAAMC,IAAI,GAAG,MAAMC,KAAK,CACrB,uDAAsDF,EAAG,EADpC,EAEtB;AACEG,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASX,KAAM;AAFxB,OADX;AAKEY,MAAAA,MAAM,EAAE;AALV,KAFsB,CAAxB;AAWA,UAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,IAAL,EAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAcC,QAA1B;AACA,UAAMC,GAAG,GAAG,EAAZ;AACAN,IAAAA,QAAQ,CAACI,IAAT,CAAcC,QAAd,CAAuBE,OAAvB,CAAgCC,OAAD,IAAa;AAC1C,UAAIC,GAAG,GAAG;AACRC,QAAAA,SAAS,EAAEF,OAAO,CAACG,GADX;AAERC,QAAAA,WAAW,EAAEJ,OAAO,CAACK,IAFb;AAGRC,QAAAA,WAAW,EAAEN,OAAO,CAACO,IAHb;AAIRC,QAAAA,WAAW,EAAER,OAAO,CAACS;AAJb,OAAV;AAMAX,MAAAA,GAAG,CAACY,IAAJ,CAAST,GAAT;AACD,KARD;AASAxB,IAAAA,eAAe;AAChB;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,cACGK,KAAK,CAAC6B,WAAN,CAAkBC,OAAlB,CAA0BC,GAA1B,CAA+BC,MAAD,IAAY;AACzC,0BACE;AACE,QAAA,OAAO,EAAE,MAAM7B,gBAAgB,CAAC6B,MAAM,CAACC,MAAR,CADjC;AAGE,QAAA,SAAS,EAAC,kBAHZ;AAAA,gCAKE;AAAA,oBAAKD,MAAM,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA,oBAAIF,MAAM,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA,SAEOH,MAAM,CAACC,MAFd;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAXA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA/CD;;GAAMrC,K;UAEUF,W,EACGD,W;;;KAHbG,K;AAiDN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { message_reducer } from \"../redux/reducer/messageReducer\";\r\n\r\nconst Chats = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const store = useSelector((data) => data);\r\n  const dispatch = useDispatch();\r\n\r\n  async function setFriendMessage(id) {\r\n    const resp = await fetch(\r\n      `https://telegram-alisherjon-api.herokuapp.com/chats/${id}`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n        method: \"GET\",\r\n      }\r\n    );\r\n\r\n    const respData = await resp.json();\r\n    console.log(respData.chat.messages);\r\n    const arr = [];\r\n    respData.chat.messages.forEach((message) => {\r\n      let obj = {\r\n        messageId: message._id,\r\n        messageFrom: message.date,\r\n        messageText: message.text,\r\n        messageData: message.from,\r\n      };\r\n      arr.push(obj);\r\n    });\r\n    message_reducer();\r\n  }\r\n  return (\r\n    <div className=\"chat-members\">\r\n      {store.userReducer.friends.map((friend) => {\r\n        return (\r\n          <div\r\n            onClick={() => setFriendMessage(friend.chatId)}\r\n            key={friend.chatId}\r\n            className=\"user-friend-item\"\r\n          >\r\n            <h3>{friend.friendName}</h3>\r\n            <p>{friend.friendPhone}</p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chats;\r\n"]},"metadata":{},"sourceType":"module"}