{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\telegram-clone\\\\src\\\\Components\\\\Otish.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Search from \"./Search\";\nimport Online from \"./Online\";\nimport { useDispatch } from \"react-redux\";\nimport { user_action } from \"../redux/action/userAction\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Otish = () => {\n  _s();\n\n  const token = localStorage.getItem(\"token\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    setInterval(() => {\n      getUserInfo(token);\n    }, 2000);\n  }, []);\n\n  async function getUserInfo(token) {\n    const resp = await fetch(\"https://telegram-alisherjon-api.herokuapp.com/users/\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${token}`\n      },\n      method: \"GET\"\n    });\n\n    if (!resp.ok) {\n      history.push(\"/login\");\n    }\n\n    const respData = await resp.json();\n    const userId = respData.user._id;\n    const friends = [];\n    respData.user.chats.forEach(member => {\n      const obj = {\n        chatId: member._id,\n        friendName: \"\",\n        friendPhone: \"\",\n        friendUserName: \"\"\n      };\n      member.members.forEach(inside => {\n        if (inside._id !== userId) {\n          obj.friendName = inside.name;\n          obj.friendPhone = inside.phone;\n          obj.friendUserName = inside.username;\n        }\n      });\n      friends.push(obj);\n    });\n    const user = {\n      name: respData.user.name,\n      phone: respData.user.phone,\n      friends,\n      username: respData.user.username,\n      userId\n    };\n    dispatch(user_action(user));\n    localStorage.setItem(\"user\", JSON.stringify(user));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: /*#__PURE__*/_jsxDEV(Online, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Otish, \"ttHHWC+EsJmhGbpqXwDwA2EruUw=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = Otish;\nexport default Otish;\n\nvar _c;\n\n$RefreshReg$(_c, \"Otish\");","map":{"version":3,"sources":["C:/Users/Ibrohim/Desktop/telegram-clone/src/Components/Otish.js"],"names":["React","useEffect","Search","Online","useDispatch","user_action","useHistory","Otish","token","localStorage","getItem","dispatch","history","setInterval","getUserInfo","resp","fetch","headers","authorization","method","ok","push","respData","json","userId","user","_id","friends","chats","forEach","member","obj","chatId","friendName","friendPhone","friendUserName","members","inside","name","phone","username","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Search from \"./Search\";\r\nimport Online from \"./Online\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { user_action } from \"../redux/action/userAction\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Otish = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      getUserInfo(token);\r\n    }, 2000);\r\n  }, []);\r\n\r\n  async function getUserInfo(token) {\r\n    const resp = await fetch(\r\n      \"https://telegram-alisherjon-api.herokuapp.com/users/\",\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n        method: \"GET\",\r\n      }\r\n    );\r\n\r\n    if (!resp.ok) {\r\n      history.push(\"/login\");\r\n    }\r\n    const respData = await resp.json();\r\n\r\n    const userId = respData.user._id;\r\n\r\n    const friends = [];\r\n\r\n    respData.user.chats.forEach((member) => {\r\n      const obj = {\r\n        chatId: member._id,\r\n        friendName: \"\",\r\n        friendPhone: \"\",\r\n        friendUserName: \"\",\r\n      };\r\n      member.members.forEach((inside) => {\r\n        if (inside._id !== userId) {\r\n          obj.friendName = inside.name;\r\n          obj.friendPhone = inside.phone;\r\n          obj.friendUserName = inside.username;\r\n        }\r\n      });\r\n      friends.push(obj);\r\n    });\r\n\r\n    const user = {\r\n      name: respData.user.name,\r\n      phone: respData.user.phone,\r\n      friends,\r\n      username: respData.user.username,\r\n      userId,\r\n    };\r\n\r\n    dispatch(user_action(user));\r\n    localStorage.setItem(\"user\", JSON.stringify(user));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"section\">\r\n        <div className=\"left\">\r\n          <Search />\r\n        </div>\r\n        <div className=\"right\">\r\n          <Online />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Otish;\r\n"]},"metadata":{},"sourceType":"module"}