[{"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\index.js":"1","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\App.js":"2","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\store\\index.js":"3","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\Otish.js":"4","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\Login.js":"5","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\Register.js":"6","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\Search.js":"7","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\Online.js":"8","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\SearchResult.js":"9","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\utils\\Alert.js":"10","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\utils\\AlertSuccess.js":"11","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\utils\\AlertDanger.js":"12","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\utils\\AlertWarning.js":"13","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\reducer\\messageReducer.js":"14","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\reducer\\userReducer.js":"15","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\action\\userAction.js":"16","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\action\\types.js":"17","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\ChatMembers.js":"18","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\action\\messageAction.js":"19","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\action\\messageWithAction.js":"20","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\action\\chatIdAction.js":"21","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\action\\newMessage.js":"22","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\reducer\\searchReducer.js":"23","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\action\\searchAction.js":"24","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\action\\addFriend.js":"25","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\DefaultLogin.js":"26"},{"size":433,"mtime":1636965918000,"results":"27","hashOfConfig":"28"},{"size":790,"mtime":1638897409860,"results":"29","hashOfConfig":"28"},{"size":483,"mtime":1638889509234,"results":"30","hashOfConfig":"28"},{"size":1922,"mtime":1638950232733,"results":"31","hashOfConfig":"28"},{"size":2324,"mtime":1638897543079,"results":"32","hashOfConfig":"28"},{"size":3774,"mtime":1638897988415,"results":"33","hashOfConfig":"28"},{"size":2785,"mtime":1638898894669,"results":"34","hashOfConfig":"28"},{"size":2547,"mtime":1638952296188,"results":"35","hashOfConfig":"28"},{"size":1873,"mtime":1638900047727,"results":"36","hashOfConfig":"28"},{"size":225,"mtime":1638858054238,"results":"37","hashOfConfig":"28"},{"size":212,"mtime":1638857606612,"results":"38","hashOfConfig":"28"},{"size":208,"mtime":1638857683220,"results":"39","hashOfConfig":"28"},{"size":212,"mtime":1638857676952,"results":"40","hashOfConfig":"28"},{"size":797,"mtime":1638883588049,"results":"41","hashOfConfig":"28"},{"size":568,"mtime":1638949254800,"results":"42","hashOfConfig":"28"},{"size":259,"mtime":1638893157047,"results":"43","hashOfConfig":"28"},{"size":397,"mtime":1638949564774,"results":"44","hashOfConfig":"28"},{"size":1831,"mtime":1638953088121,"results":"45","hashOfConfig":"28"},{"size":150,"mtime":1638876352576,"results":"46","hashOfConfig":"28"},{"size":155,"mtime":1638877629250,"results":"47","hashOfConfig":"28"},{"size":140,"mtime":1638882474445,"results":"48","hashOfConfig":"28"},{"size":152,"mtime":1638883366104,"results":"49","hashOfConfig":"28"},{"size":452,"mtime":1638895588593,"results":"50","hashOfConfig":"28"},{"size":267,"mtime":1638895612118,"results":"51","hashOfConfig":"28"},{"size":142,"mtime":1638891729185,"results":"52","hashOfConfig":"28"},{"size":219,"mtime":1638897264557,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"16pzflz",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\index.js",[],["112","113"],"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\App.js",["114"],"import \"./App.css\";\r\nimport Otish from \"./Components/Otish\";\r\nimport Login from \"./Components/Login\";\r\nimport Register from \"./Components/Register\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Alert from \"./Components/utils/Alert\";\r\nimport \"./Components/utils/alert.css\";\r\nimport DefaultLogin from \"./Components/DefaultLogin\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ToastContainer />\r\n      <Route component={DefaultLogin} path=\"/\" exact />\r\n      <Route component={Register} path=\"/register\" exact />\r\n      <Route component={Otish} path=\"/chat\" exact />\r\n      <Route component={Login} path=\"/Login\" exact />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\store\\index.js",[],"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\Otish.js",["115"],"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\Login.js",["116","117"],"import React, { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { user_action } from \"../redux/action/userAction\";\r\n\r\nconst Register = () => {\r\n  const passwordRef = useRef();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (passwordRef.current.value === \"\" || userName === \"\") {\r\n      return toast.warning(\"Please fill all the fields\");\r\n    }\r\n\r\n    getLogin(\"https://telegram-alisherjon-api.herokuapp.com/auth\");\r\n  };\r\n\r\n  const handleChangeUserName = (value) => {\r\n    setUserName(value);\r\n  };\r\n\r\n  async function getLogin(url) {\r\n    const body = JSON.stringify({\r\n      username: userName,\r\n      password: passwordRef.current.value,\r\n    });\r\n\r\n    const resp = await fetch(url, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n      body,\r\n    });\r\n\r\n    const respData = await resp.json();\r\n\r\n    if (!resp.ok) {\r\n      return toast.error(\"User not found!\");\r\n    }\r\n\r\n    localStorage.setItem(\"token\", respData.token);\r\n    history.push(\"/chat\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"register-page\">\r\n      <form className=\"register-form\" onSubmit={handleSubmit}>\r\n        <h2 className=\"title\">Login</h2>\r\n        <div className=\"form\">\r\n          <div className=\"check-username\">\r\n            <label htmlFor=\"username\">Username:</label>\r\n            <br />\r\n            <input\r\n              onChange={(e) => handleChangeUserName(e.target.value)}\r\n              type=\"username\"\r\n              id=\"username\"\r\n              value={userName}\r\n            />\r\n            <br /> <br />\r\n          </div>\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <br />\r\n          <input\r\n            className=\"w-100\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            ref={passwordRef}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"register-button w-100\">\r\n          <button className=\"w-100 \" type=\"submit\">\r\n            Log in\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\Register.js",["118"],"import React, { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Register = () => {\r\n  const [userCheck, setUserCheck] = useState(null);\r\n  const nameRef = useRef();\r\n  const passwordRef = useRef();\r\n  const telNumberRef = useRef();\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      nameRef.current.value === \"\" ||\r\n      passwordRef.current.value === \"\" ||\r\n      telNumberRef === \"\" ||\r\n      userName === \"\"\r\n    ) {\r\n      return toast.warning(\"please fill all the fields\");\r\n    } else if (userCheck !== true) {\r\n      return toast.warning(\"please check your username\");\r\n    }\r\n    getRegister(\"https://telegram-alisherjon-api.herokuapp.com/users\");\r\n  };\r\n\r\n  const handleUserCheck = () => {\r\n    checkUser(\r\n      `https://telegram-alisherjon-api.herokuapp.com/usernames/${userName}`\r\n    );\r\n  };\r\n\r\n  const handleChangeUserName = (value) => {\r\n    setUserName(value);\r\n    setUserCheck(null);\r\n  };\r\n\r\n  async function checkUser(url) {\r\n    if (userName === \"\") {\r\n      return toast.warning(\"please fill the field\");\r\n    }\r\n    const resp = await fetch(url, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"GET\",\r\n    });\r\n    setUserCheck(resp.ok);\r\n  }\r\n\r\n  async function getRegister(url) {\r\n    const body = JSON.stringify({\r\n      name: nameRef.current.value,\r\n      username: userName,\r\n      password: passwordRef.current.value,\r\n      phone: telNumberRef.current.value,\r\n    });\r\n\r\n    const resp = await fetch(url, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n      body,\r\n    });\r\n\r\n    if (!resp.ok) {\r\n      return toast.error(\"Your phone is already registered!\");\r\n    }\r\n    const respData = await resp.json();\r\n\r\n    localStorage.setItem(\"token\", respData.token);\r\n\r\n    history.push(\"/chat\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"register-page\">\r\n      <form className=\"register-form\" onSubmit={handleSubmit}>\r\n        <h2 className=\"title\">Register</h2>\r\n        <div className=\"form\">\r\n          <label htmlFor=\"Name\">Name:</label>\r\n          <br />\r\n          <input className=\"w-100\" type=\"Name\" id=\"Name\" ref={nameRef} />\r\n          <br /> <br />\r\n          <label htmlFor=\"phone\">Phone:</label>\r\n          <br />\r\n          <input className=\"w-100\" type=\"phone\" id=\"phone\" ref={telNumberRef} />\r\n          <br /> <br />\r\n          <div className=\"check-username\">\r\n            <label htmlFor=\"username\">Username:</label>\r\n            <br />\r\n            <input\r\n              onChange={(e) => handleChangeUserName(e.target.value)}\r\n              type=\"username\"\r\n              id=\"username\"\r\n              value={userName}\r\n            />\r\n            <i\r\n              onClick={handleUserCheck}\r\n              className={\r\n                userCheck !== null\r\n                  ? userCheck === true\r\n                    ? \"fas fa-check green\"\r\n                    : \"fas fa-times red\"\r\n                  : \"fas fa-question yellow\"\r\n              }\r\n            ></i>\r\n            <br /> <br />\r\n          </div>\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <br />\r\n          <input\r\n            className=\"w-100\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            ref={passwordRef}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"register-button w-100\">\r\n          <button className=\"w-100 \" type=\"submit\">\r\n            Sign Up\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\Search.js",[],"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\Online.js",["119"],"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\SearchResult.js",["120","121","122","123"],"import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toast } from \"react-toastify\";\r\nimport { add_friend } from \"../redux/action/addFriend\";\r\nimport { chat_id_action } from \"../redux/action/chatIdAction\";\r\nimport { message_action } from \"../redux/action/messageAction\";\r\nimport { message_with_action } from \"../redux/action/messageWithAction\";\r\nimport { clear_search } from \"../redux/action/searchAction\";\r\n\r\nconst SearchResult = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const store = useSelector((data) => data);\r\n  const dispatch = useDispatch();\r\n\r\n  async function handleClick() {\r\n    setChat(store.searchReducer.searchFriendId);\r\n    dispatch(clear_search());\r\n  }\r\n\r\n  async function setChat(id) {\r\n    const body = JSON.stringify({\r\n      friendId: id,\r\n    });\r\n\r\n    const resp = await fetch(\r\n      \"https://telegram-alisherjon-api.herokuapp.com/chats/\",\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n        method: \"POST\",\r\n        body,\r\n      }\r\n    );\r\n\r\n    const respData = await resp.json();\r\n\r\n    if (respData.status !== 201) {\r\n      return toast.error(\"Chat is already exists!\");\r\n    }\r\n\r\n    const obj = {\r\n      chatId: respData.chat._id,\r\n      friendName: store.searchReducer.searchName,\r\n      friendPhone: store.searchReducer.phone,\r\n    };\r\n    dispatch(add_friend(obj));\r\n    return obj;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onClick={() => handleClick()}\r\n      className={\r\n        store.searchReducer.isHidden ? \"search-result hidden\" : \"search-result \"\r\n      }\r\n    >\r\n      <h3>{store.searchReducer.searchName}</h3>\r\n      <h3>{store.searchReducer.phone}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResult;\r\n","C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\utils\\Alert.js",[],"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\utils\\AlertSuccess.js",[],"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\utils\\AlertDanger.js",[],"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\utils\\AlertWarning.js",[],"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\reducer\\messageReducer.js",[],"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\reducer\\userReducer.js",["124","125"],"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\action\\userAction.js",[],"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\action\\types.js",[],"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\ChatMembers.js",["126"],"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\action\\messageAction.js",[],"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\action\\messageWithAction.js",[],"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\action\\chatIdAction.js",[],"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\action\\newMessage.js",[],"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\reducer\\searchReducer.js",[],"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\action\\searchAction.js",[],"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\redux\\action\\addFriend.js",[],"C:\\Users\\Ibrohim\\Desktop\\telegram-clone\\src\\Components\\DefaultLogin.js",["127"],"import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst DefaultLogin = () => {\r\n  const history = useHistory();\r\n  history.push(\"/register\");\r\n  return null;\r\n};\r\n\r\nexport default DefaultLogin;\r\n",{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":6,"column":8,"nodeType":"134","messageId":"135","endLine":6,"endColumn":13},{"ruleId":"136","severity":1,"message":"137","line":15,"column":6,"nodeType":"138","endLine":15,"endColumn":8,"suggestions":"139"},{"ruleId":"132","severity":1,"message":"140","line":6,"column":10,"nodeType":"134","messageId":"135","endLine":6,"endColumn":21},{"ruleId":"132","severity":1,"message":"141","line":11,"column":9,"nodeType":"134","messageId":"135","endLine":11,"endColumn":17},{"ruleId":"132","severity":1,"message":"142","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":21},{"ruleId":"132","severity":1,"message":"143","line":46,"column":11,"nodeType":"134","messageId":"135","endLine":46,"endColumn":19},{"ruleId":"132","severity":1,"message":"144","line":4,"column":10,"nodeType":"134","messageId":"135","endLine":4,"endColumn":20},{"ruleId":"132","severity":1,"message":"145","line":7,"column":10,"nodeType":"134","messageId":"135","endLine":7,"endColumn":24},{"ruleId":"132","severity":1,"message":"146","line":8,"column":10,"nodeType":"134","messageId":"135","endLine":8,"endColumn":24},{"ruleId":"132","severity":1,"message":"147","line":9,"column":10,"nodeType":"134","messageId":"135","endLine":9,"endColumn":29},{"ruleId":"132","severity":1,"message":"148","line":3,"column":3,"nodeType":"134","messageId":"135","endLine":3,"endColumn":14},{"ruleId":"132","severity":1,"message":"149","line":4,"column":3,"nodeType":"134","messageId":"135","endLine":4,"endColumn":17},{"ruleId":"132","severity":1,"message":"150","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":26},{"ruleId":"132","severity":1,"message":"151","line":1,"column":8,"nodeType":"134","messageId":"135","endLine":1,"endColumn":13},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getUserInfo' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["154"],"'user_action' is defined but never used.","'dispatch' is assigned a value but never used.","'useDispatch' is defined but never used.","'respData' is assigned a value but never used.","'useHistory' is defined but never used.","'chat_id_action' is defined but never used.","'message_action' is defined but never used.","'message_with_action' is defined but never used.","'RESET_STATE' is defined but never used.","'UPDATE_CONTACT' is defined but never used.","'useEffect' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},"Update the dependencies array to be: [getUserInfo, token]",{"range":"157","text":"158"},[448,450],"[getUserInfo, token]"]